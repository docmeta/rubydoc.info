version: "3.7"
services:
  app:
    image: 127.0.0.1:5000/rubydoc-app
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    environment:
      RUBYOPT: --yjit
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config:/app/config
      - ./repos:/app/repos
      - ./data:/app/data
      - ./log:/app/log
    deploy:
      resources:
        limits:
          cpus: "6"
          memory: 6G
      replicas: 1
      update_config:
        order: start-first
    depends_on:
      - docparse
      - db
  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: db
      POSTGRES_PASSWORD: db
    volumes:
      - db:/var/lib/postgresql/data
    deploy:
      replicas: 1
      update_config:
        order: start-first
      restart_policy:
        condition: any
  docparse:
    image: 127.0.0.1:5000/rubydoc-docparse
    build:
      context: ./docker/docparse
    environment:
      RUBYOPT: --yjit
    entrypoint: sh -c "echo Docparse image is built. It is okay for this service to exit."
    deploy:
      replicas: 0
      restart_policy:
        condition: none
  nginx:
    image: nginx:alpine
    volumes:
      - ./config/nginx:/etc/nginx/templates:ro
      - ./config/certs:/etc/nginx/certs:ro
      - ./public:/public:ro
    deploy:
      replicas: 1
      update_config:
        order: start-first
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    depends_on:
      - app
volumes:
  db:
